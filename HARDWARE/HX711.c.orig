#include "hx711.h"
#include "delay.h"

#define ADIO GPIOA        //ad口  
#define DATA GPIO_Pin_6	  //数据口 
#define CLK  GPIO_Pin_5	  //时钟 
#define ADCLK RCC_APB2Periph_GPIOA
#define canshui  395
#define weight_maopi  82207
// double	weight_maopi=0;//毛皮重量

void ADInit(void) //AD初始化
{
    GPIO_InitTypeDef  GPIO_InitStructure;

    RCC_APB2PeriphClockCmd(ADCLK, ENABLE); //使能时钟口

    GPIO_InitStructure.GPIO_Pin = CLK;				 //LED0-->PB.5 端口配置
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP; 		 //推挽输出
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;		 //IO口速度为50MHz
    GPIO_Init(ADIO, &GPIO_InitStructure);


    GPIO_InitStructure.GPIO_Pin = DATA; //为数据口
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;//浮空输入
    GPIO_Init(ADIO, &GPIO_InitStructure);
}

unsigned long HX711_Read(void)  //读取HX711读到的数据
{
    unsigned long val = 0;
    unsigned char i = 0;
    float p;
    GPIO_SetBits(ADIO, DATA);
    GPIO_ResetBits(ADIO, CLK); //使能AD（CLK 置低）
    while(GPIO_ReadInputDataBit(ADIO, DATA)); //AD转换未结束则等待，否则开始读取
    delay_us(1);
    for(i = 0; i < 24; i++)
    {
        GPIO_SetBits(ADIO, CLK); //CLK置高（发送脉冲）
        val = val << 1; //下降沿来时变量Count左移一位，右侧补零
        delay_us(1);
        GPIO_ResetBits(ADIO, CLK); //CLK 置低
        if(GPIO_ReadInputDataBit(ADIO, DATA))
            val++;
        delay_us(1);
    }
    GPIO_SetBits(ADIO, CLK);
    val =val ^ 0x800000; //第25个脉冲下降沿来时，转换数据
    delay_us(1);
    GPIO_ResetBits(ADIO, CLK);
    delay_us(1);
    p = val;
    return p;
}
double get_shu(void)
{
    return HX711_Read() / 100;

}
//double Get_Maopi(void)
//  {
//	  weight_maopi=HX711_Read()/100;
//		return weight_maopi;
//  }
double  sum = 0;
double Get_Weight(void)
{
    sum = get_shu() - weight_maopi;
    return sum / 4.14;
}

